name: ci

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@056b8ec6661ce03a987ab8643a0edc346ae63fe3
      -
        name: Install docker client
        run: |
          #!/bin/sh
          wget -O docker.tgz -q https://download.docker.com/linux/static/stable/x86_64/docker-24.0.2.tgz
          tar xzf docker.tgz
          mv docker/* /usr/local/bin
          rmdir docker
          : echo DOCKER_REGISTRY_URL=${GITHUB_SERVER_URL##*/} >> ${GITHUB_ENV}
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175
        with:
          images: code.devcloud.soren.tools/platform/caddy
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=long
            type=sha
            type=semver,pattern=v{{major}}.{{minor}}.{{patch}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=ref,event=tag
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc
        with:
          registry: code.devcloud.soren.tools
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4c0219f9ac95b02789c1075625400b2acbff50b1
      -
        name: Build and push
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825
        env:
          ACTIONS_RUNTIME_TOKEN: ""
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          sbom: true
          provenance: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
  provenance:
    needs: [build]
    permissions:
      actions: read # for detecting the Github Actions environment.
      id-token: write # for creating OIDC tokens for signing.
      packages: write # for uploading attestations.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v1.7.0
    with:
      image: ${{ needs.build.outputs.image }}
      digest: ${{ needs.build.outputs.digest }}
      registry-username: ${{ secrets.DOCKER_USER }}
    secrets:
      registry-password: ${{ secrets.DOCKER_PASSWORD }}
